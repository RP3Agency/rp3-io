/* ==========================================================================
   centered
   Horizontal and/or vertical centering via `transform: translate()`
   Parent element must have `position: relative;` (unless already set as 
   `position: absolute`)

   Accepted values: "both" (default), "horizontal", "vertical"
   ========================================================================== */

@mixin centered( $direction: "both" ) {
	position: absolute;

	@if ( $direction == "both" ) {

		left: 50%;
		top: 50%;
		transform: translate( -50%, -50% );

	} @else if ( $direction == "horizontal" ) {

		left: 50%;
		transform: translate( -50%, 0 );

	} @else if ( $direction == "vertical" ) {

		top: 50%;
		transform: translate( 0, -50% );
	}
}

/* ==========================================================================
   highlight
   Background coloring for debugging
   ========================================================================== */

@mixin highlight( $adjustment: 0 ) {

	$color__test: rgba( 255, 0, 255, 0.2 );

	background-color: adjust-hue( $color__test, $adjustment * 1deg );
}


/* ==========================================================================
   hover-state
   Quicker way of writing &:hover, &:active, &:focus
   ========================================================================== */

@mixin hover-state {

	&:hover,
	&:active,
	&:focus {
		@content;
	}
}


/* ==========================================================================
   aspect-ratio
   Define a constant aspect ratio, regardless of actual size.
   Default is 4:3
   ========================================================================== */

@mixin aspect-ratio( $width: 320px, $height: 240px ) {
	position: relative;

	&::before {
		content: "";
		display: block;
		padding-top: percentage( $height / $width );
		width: 100%;
	}

	> * {
		bottom: 0;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
	}
}


/* ==========================================================================
   appearance
   vendor-prefix the "appearance" property (b/c autoprefixer doesn't)
   ========================================================================== */

@mixin appearance($appearance) {
	-webkit-appearance: $appearance;
	-moz-appearance: $appearance;
	appearance: $appearance;
}
